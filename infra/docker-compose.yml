services:
  ui:
    build: ..
    image: datagenius/ui:latest
    command: ["streamlit","run","app.py","--server.port=8501","--server.address","0.0.0.0"]
    env_file: ["../.env"]
    depends_on: [api, mlflow, minio, redis]
    expose: ["8501"]
    profiles: ["dev","prod"]

  api:
    build: ..
    image: datagenius/api:latest
    command: ["uvicorn","api.main:app","--host","0.0.0.0","--port","8000"]
    env_file: ["../.env"]
    depends_on: [mlflow, minio, redis]
    expose: ["8000"]
    profiles: ["dev","prod"]

  postgres:
    image: postgres:16
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes: [ "pg_data:/var/lib/postgresql/data" ]
    profiles: ["dev","prod"]

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.16.2
    command: >
      mlflow server 
      --backend-store-uri postgresql+psycopg2://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/$POSTGRES_DB
      --default-artifact-root s3://mlflow/
      --host 0.0.0.0 --port 5000
    environment:
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    depends_on: [postgres, minio]
    expose: ["5000"]
    profiles: ["dev","prod"]

  minio:
    image: minio/minio:RELEASE.2024-08-17T01-24-54Z
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
    volumes: [ "minio_data:/data" ]
    expose: ["9000","9001"]
    profiles: ["dev","prod"]

  redis:
    image: redis:7-alpine
    expose: ["6379"]
    profiles: ["dev","prod"]

  worker:
    build: ..
    image: datagenius/worker:latest
    command: ["python","queue/worker.py"]
    env_file: ["../.env"]
    depends_on: [redis, mlflow, minio]
    profiles: ["dev","prod"]

  nginx:
    image: nginx:1.25-alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
    ports: ["80:80","443:443"]
    depends_on: [ui, api, mlflow]
    profiles: ["prod"]

volumes:
  pg_data:
  minio_data:
