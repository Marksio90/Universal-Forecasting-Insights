version: "3.9"

x-logging: &default-logging
  driver: json-file
  options: { max-size: "10m", max-file: "3" }

networks:
  internal:
    driver: bridge

volumes:
  pg_data:
  minio_data:
  models:
  artifacts:
  reports:

services:
  ui:
    build: ..
    image: datagenius/ui:latest
    command: ["streamlit","run","app.py","--server.port=8501","--server.address","0.0.0.0"]
    env_file: ["../.env"]
    environment:
      # opcjonalne podpowiedzi dla UI/SDK
      MLFLOW_TRACKING_URI: http://mlflow:5000
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
    depends_on:
      api:
        condition: service_started
      mlflow:
        condition: service_started
      minio:
        condition: service_started
      redis:
        condition: service_started
    expose: ["8501"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8501/_stcore/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 20
      start_period: 20s
    logging: *default-logging
    networks: [internal]
    volumes:
      - models:/app/models
      - reports:/app/reports
      - artifacts:/app/artifacts

  api:
    build: ..
    image: datagenius/api:latest
    command: ["uvicorn","api.main:app","--host","0.0.0.0","--port","8000","--proxy-headers"]
    env_file: ["../.env"]
    environment:
      MLFLOW_TRACKING_URI: http://mlflow:5000
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      MODEL_STORE_URI: models
      REDIS_HOST: redis
      REDIS_PORT: "6379"
    depends_on:
      mlflow:
        condition: service_started
      minio:
        condition: service_started
      redis:
        condition: service_started
    expose: ["8000"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 15s
    logging: *default-logging
    networks: [internal]
    volumes:
      - models:/app/models
      - artifacts:/app/artifacts
      - reports:/app/reports

  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER:     ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB:       ${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
    expose: ["5432"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 20s
    logging: *default-logging
    networks: [internal]

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.16.2
    command: >
      mlflow server
      --backend-store-uri postgresql+psycopg2://$POSTGRES_USER:$POSTGRES_PASSWORD@postgres:5432/$POSTGRES_DB
      --default-artifact-root s3://mlflow/
      --host 0.0.0.0 --port 5000
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID:      ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY:  ${AWS_SECRET_ACCESS_KEY}
    depends_on:
      postgres:
        condition: service_started
      minio:
        condition: service_started
    expose: ["5000"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:5000/ || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 20
      start_period: 25s
    logging: *default-logging
    networks: [internal]
    volumes:
      - artifacts:/artifacts

  minio:
    image: minio/minio:RELEASE.2024-08-17T01-24-54Z
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER:     ${AWS_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}
    volumes:
      - minio_data:/data
    expose: ["9000","9001"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:9000/minio/health/live || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 20s
    logging: *default-logging
    networks: [internal]

  minio-init:
    image: minio/mc
    depends_on:
      minio:
        condition: service_started
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY} &&
      mc mb -p local/mlflow || true &&
      mc anonymous set download local/mlflow || true &&
      echo 'MinIO buckets ready';
      "
    restart: "no"
    networks: [internal]

  redis:
    image: redis:7-alpine
    expose: ["6379"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep -q PONG || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20
    logging: *default-logging
    networks: [internal]

  worker:
    build: ..
    image: datagenius/worker:latest
    command: ["python","queue/worker.py"]
    env_file: ["../.env"]
    environment:
      REDIS_HOST: redis
      REDIS_PORT: "6379"
      MLFLOW_TRACKING_URI: http://mlflow:5000
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
    depends_on:
      redis:
        condition: service_started
      mlflow:
        condition: service_started
      minio:
        condition: service_started
    restart: unless-stopped
    logging: *default-logging
    networks: [internal]
    volumes:
      - artifacts:/app/artifacts
      - models:/app/models

  nginx:
    image: nginx:1.25-alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
    ports: ["80:80","443:443"]
    depends_on:
      ui:
        condition: service_started
      api:
        condition: service_started
      mlflow:
        condition: service_started
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost/healthz || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 20
      start_period: 15s
    logging: *default-logging
    networks: [internal]
