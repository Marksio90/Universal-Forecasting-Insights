# nginx.conf — PRO+++ reverse proxy for Streamlit UI, FastAPI, and MLflow
# - HTTP→HTTPS redirect
# - HTTP/2, WebSockets, timeouts, buffering tuned
# - Security headers, HSTS
# - Gzip (Brotli optional), rate-limit on /api
# - Works great in Docker (resolver 127.0.0.11)

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections 4096;
  multi_accept on;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile        on;
  tcp_nopush      on;
  tcp_nodelay     on;
  keepalive_timeout  65s;

  server_tokens off;
  client_max_body_size 200m;   # align with app upload limit

  # Docker DNS (adjust if not running in Docker)
  resolver 127.0.0.11 ipv6=off valid=30s;

  # WebSocket upgrade mapping
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # Simple rate-limit for API
  limit_req_zone $binary_remote_addr zone=api_rate:10m rate=20r/s;

  # Compression
  gzip on;
  gzip_comp_level 5;
  gzip_min_length 1024;
  gzip_types
    text/plain text/css text/javascript application/javascript application/json
    application/xml application/xml+rss image/svg+xml font/ttf font/otf;
  gzip_vary on;

  # (Optional) Brotli if module available
  # brotli on;
  # brotli_comp_level 5;
  # brotli_types text/plain text/css application/json application/javascript text/xml application/xml image/svg+xml;

  # Upstreams
  upstream ui_upstream   { server ui:8501;   keepalive 32; }
  upstream api_upstream  { server api:8000;  keepalive 32; }
  upstream mlflow_upstream { server mlflow:5000; keepalive 16; }

  # Common proxy params
  map "" $proxy_xff {}
  map $remote_addr $proxy_xff { default "$remote_addr"; }
  # You can also trust a load balancer here via set_real_ip_from

  # --- HTTP -> HTTPS redirect ---
  server {
    listen 80;
    listen [::]:80;
    server_name _;
    return 301 https://$host$request_uri;
  }

  # --- HTTPS (UI + API + MLflow) ---
  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name _;

    ssl_certificate     /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers off;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    # CSP for Streamlit can be tricky; this relaxed policy keeps things working:
    add_header Content-Security-Policy "default-src 'self' data: blob: 'unsafe-inline' 'unsafe-eval' https:;" always;

    # Health endpoint (nginx)
    location = /healthz {
      add_header Content-Type text/plain;
      return 200 'ok';
    }

    # --- UI (Streamlit) ---
    location / {
      proxy_pass http://ui_upstream/;
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_xff;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      proxy_read_timeout 3600s;   # websockets/long-poll
      proxy_send_timeout 3600s;
      proxy_buffering off;        # stream updates in real-time
    }

    # --- API (FastAPI mounted behind /api) ---
    location /api/ {
      # rewrite path so /api/foo -> /foo in FastAPI
      rewrite ^/api/?(.*)$ /$1 break;
      proxy_pass http://api_upstream/;

      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_xff;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Prefix /api;
      proxy_set_header X-Request-ID $request_id;

      proxy_connect_timeout 30s;
      proxy_send_timeout 120s;
      proxy_read_timeout 120s;
      proxy_buffering on;
      proxy_buffers 64 16k;
      proxy_busy_buffers_size 64k;

      limit_req zone=api_rate burst=40 nodelay;
    }

    # --- MLflow under /mlflow ---
    location /mlflow/ {
      # mlflow served at root internally
      rewrite ^/mlflow/?(.*)$ /$1 break;
      proxy_pass http://mlflow_upstream/;

      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_xff;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Forwarded-Prefix /mlflow;

      proxy_connect_timeout 30s;
      proxy_send_timeout 300s;
      proxy_read_timeout 300s;

      # Mlflow uploads/artifacts can be large:
      client_max_body_size 500m;
    }
  }
}
